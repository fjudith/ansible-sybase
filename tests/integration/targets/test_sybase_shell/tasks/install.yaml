# - name: Get env file content
#   slurp:
#     src: '{{ sybase.client.env_file }}'
#   register: env_file_content

# - debug:
#     msg: "{{ ('{' + (env_file_content['content'] | b64decode).split('\n') | select | map('regex_replace', '([^=]*)=(.*)', '\"\\1\": \"\\2\"') | join(',') + '}') | from_json }}"

# - name: Parse environment
#   set_fact:
#     env_vars: "{{ ('{' + (env_file_content['content'] | b64decode).split('\n') | select | map('regex_replace', '([^=]*)=(.*)', '\"\\1\": \"\\2\"') | join(',') + '}') | from_json }}"

# - name: Display environment variables
#   command: env
#     environment: '{{ env_vars }}'

- name: Create database
  shell: >-
    source {{ sybase.client.env_command }} &&
    '{{ sybase.client.isql_command }}'
    -U '{{ sybase.user }}'
    -P '{{ sybase.password }}'
    -S '{{ sybase.server }}'
    -D master
    --retserverror
    -i"/tmp/database.sql"

- name: Create user
  shell: >-
    source {{ sybase.client.env_command }} &&
    '{{ sybase.client.isql_command }}'
    -U '{{ sybase.user }}'
    -P '{{ sybase.password }}'
    -S '{{ sybase.server }}'
    --retserverror
    -i"/tmp/user.sql"

- name: Create permissions
  shell: >-
    source {{ sybase.client.env_command }} &&
    '{{ sybase.client.isql_command }}'
    -U '{{ sybase.user }}'
    -P '{{ sybase.password }}'
    -S '{{ sybase.server }}'
    -D '{{ sybase.database.name }}'
    --retserverror
    -i"/tmp/permissions.sql"

- name: Create table
  shell: >-
    source {{ sybase.client.env_command }} &&
    '{{ sybase.client.isql_command }}'
    -U '{{ sybase.database.user }}'
    -P '{{ sybase.database.password }}'
    -S '{{ sybase.server }}'
    -D '{{ sybase.database.name }}'
    --retserverror
    -i"/tmp/table.sql"
